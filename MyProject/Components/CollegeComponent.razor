@inject HttpClient Http

<div class="back-g">
    <div class="wrap">
    <h2  style="padding-top: 100px;">@Title</h2>
    <p>دانشکده مربوطه را انتخاب کنید</p>  
    <div class="row justify-content-center">
    <div class="da-slide" style="padding: 21% 5% 0 5%;">
        <div class="portfolio logo mix_all" data-cat="logo" style="display: inline-block; margin-top: -280px; opacity: 1;">
            <div class="portfolio-wrapper">				
                <ul class="ch-grid">
                    @for (int j = 8*i; j < 8*(i+1); j++)
                    {
                        @if (j == Schools.Length)
                        {
                            break;
                        }
                        string school = Schools[j];
                        <ZoomAnimComponent href="@Href" text=@school/>
                    }
                </ul>    
            </div>
        </div>
        </div>
        </div>
        <div class="row justify-content-center mt-2 mb-5">
            <ul class="pagination p-0">   
                <PagesComponent count=8 enumerable="@i" OnNext="() => i++" OnPrev="() => i--" max="@Schools.Length"/>
            </ul>
        </div> 
    </div>
</div> 

@code{
    [Parameter]
    public string Title { get; set; }
    [Parameter]
    public string Href { get; set; }
    public int i {get; set;} = 0;
    private string[] Schools = {};
    protected override async Task OnInitializedAsync()
    {
        var uri = @"https://localhost:5004/teacher/schools";
        Schools = await Http.GetFromJsonAsync<string[]>(uri);
    }
}